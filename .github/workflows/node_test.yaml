name: Node Test

# Runs tests, updates PRs with test/coverage results, and optionally updates CodeCov.

on:
  workflow_call:
    inputs:
      env-vars:
        description: |
          Arbitrary environment variables for the test env, provided as a
          space-separated list of key-value pairs (e.g., "FOO=bar BAZ=qux").
          All env-vars are masked before usage.
        type: string
        required: false
      test-script:
        description: |
          The test script to run (e.g., "test:ci" will result in `npm run test:ci`).
        type: string
        required: false
        default: "test:ci"
      node-version:
        description: |
          The NodeJS version to use. If this input is not provided, the version
          specified in .nvmrc will be used if available â€” as a final fallback,
          the version specified in the package.json "engines.node" field will
          be used.
        type: string
        required: false
      node-version-file:
        description: The path to the file containing the NodeJS version to use.
        type: string
        required: false
      coverage-reports-dir:
        description: "The path to the directory where coverage reports are located."
        type: string
        required: false
        default: "coverage"
      should-update-codecov:
        description: "Whether CodeCov should be updated"
        type: boolean
        required: false
        default: true
      should-upload-coverage-artifacts:
        description: |
          Whether coverage artifacts should be uploaded. The relevant action looks
          for coverage reports generated by your test script in a directory named
          "coverage" in the repo root, and if found, will upload the directory as
          an artifact. If no coverage reports are found, the action is skipped.
        type: boolean
        required: false
        default: true
      coverage-artifacts-name:
        description: |
          The name of the coverage artifacts provided to actions/upload-artifact.
        type: string
        required: false
        default: "coverage-reports"

    secrets:
      CODECOV_TOKEN:
        description: "CodeCov token for private repo code coverage reports"
        required: false
      env-vars:
        description: |
          Arbitrary environment variables for the test env, provided as a
          space-separated list of key-value pairs (e.g., "FOO=bar BAZ=qux").
          All env-vars are masked before usage.
        required: false

    outputs:
      coverage-artifacts-name:
        description: "The name of the coverage artifacts provided to actions/upload-artifact"
        value: ${{ inputs.coverage-artifacts-name }}

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    outputs:
      did-tests-succeed: ${{ steps.run-tests.outputs.did-tests-succeed }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          node-version-file: ${{ inputs.node-version-file }}

      - name: Run Tests
        id: run-tests
        run: |
          # PARSE, MASK, AND EXPORT ENV VARS
          for env_var_kv_pair in ${{ inputs.env-vars }} ${{ secrets.env-vars }}; do
            read -r key value <<< "${env_var_kv_pair/=/ }"
            echo "::add-mask::$key"
            export $key="$value"
          done

          npm ci --include=dev

          npm run ${{ inputs.test-script }}

      - name: Update GitHub Commit Status
        if: ${{ !cancelled() }}
        run: |
          if [ ${{ steps.run-tests.outcome }} == 'success' ]; then
            commit_status_state='success'
            description='Tests passed'
          else
            commit_status_state='failure'
            description='Tests failed'
          fi

          curl --request POST \
            --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
            --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --header 'content-type: application/json' \
            --data "{
              \"context\": \"tests\",
              \"state\": \"$commit_status_state\",
              \"description\": \"$description\",
              \"target_url\": \"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
            }"

      - name: Check for Coverage Reports
        id: check-for-coverage-reports
        run: |
          if [ -d "${{ inputs.coverage-reports-dir }}" ]; then
            echo "did-find-reports=true" >> $GITHUB_OUTPUT
          else
            echo "did-find-reports=false" >> $GITHUB_OUTPUT
            echo "No coverage reports found at path \"${{ inputs.coverage-reports-dir }}\"."
          fi

      - name: Upload Coverage Artifacts
        if: |
          success() &&
          inputs.should-upload-coverage-artifacts == true &&
          steps.check-for-coverage-reports.outputs.did-find-reports == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.coverage-artifacts-name }}
          path: ${{ inputs.coverage-reports-dir }}

      - name: Update CodeCov
        if: |
          success() &&
          inputs.should-update-codecov == true &&
          steps.check-for-coverage-reports.outputs.did-find-reports == 'true'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # <-- not required for public repos
          directory: ${{ inputs.coverage-reports-dir }}
